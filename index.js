// index.js
const { Telegraf, Markup } = require('telegraf');
const rawCelebs = require('./celebs.json');

// ---- BOT TOKEN (Railway env var) ----
const TOKEN = process.env.BOT_TOKEN || process.env.TELEGRAM_BOT_TOKEN;
if (!TOKEN) {
  console.error('Missing BOT_TOKEN (or TELEGRAM_BOT_TOKEN) env var');
  process.exit(1);
}
const bot = new Telegraf(TOKEN);

// ---- UTIL: slug + safe label ----
const slugify = (s) =>
  String(s || '')
    .toLowerCase()
    .trim()
    .replace(/[^a-z0-9]+/g, '-')
    .replace(/^-+|-+$/g, '')
    .slice(0, 45);

// Normalize celebs (ensure slug exists)
const celebs = (rawCelebs || [])
  .filter((c) => c && c.name)
  .map((c) => ({
    ...c,
    slug: c.slug ? String(c.slug) : slugify(c.name),
  }));

// ---- EMOJI MAP (1 emoji per name) ----
const emojiMap = {
  "Ellie Leen":"üåº","Xenon":"üíú","Lada Lyumos":"üé≠",
  "Alina Becker":"üéÄ","Corrina Kopf":"üíÑ","Mikayla Demaiter":"üèí","HannahOwo":"üéÆ","Amouranth":"üî•","Octokuro":"üñ§","Selti":"üßä","Grace Charis":"‚õ≥Ô∏è","Vladislava Shelygina":"‚ùÑÔ∏è",
  "Mia Khalifa":"üñãÔ∏è","Megnut":"ü•ú","Lela Sonha":"üåô","SweetieFox":"ü¶ä","Vanessa Bohorquez":"üå¥","Kayla Moody":"‚ú®","Fetching_Butterflies":"ü¶ã","Kenzie Anne":"üíé","Leah Chan":"üé®","Elle Brooke":"‚öΩÔ∏è",
  "Bunni.Emmie":"üê∞","MsSethi":"üå∂Ô∏è","Dainty Wilder":"üå∏","Izzybunnies":"üêá","Funsizedasian":"üç°","Whitecrush":"ü§ç","Lehlani":"üå∫","RealSkyBri":"‚òÅÔ∏è","Isla Moon":"üåï","Audrey & Sadie":"üëØ‚Äç‚ôÄÔ∏è",
  "Quinn Finite":"‚ôæÔ∏è","Jodielawsonx":"üì∏","Avva Ballerina":"ü©∞","MsPuiyi":"üåü","Bigtittygothegg":"ü•ö","Peachthot":"üçë","Avva Addams":"üñ§","LittleSula":"üß∏","Mia Malkova":"üåº","Bishoujomom":"üå∏",
  "Kimberly Yang":"üíÆ","mysticbeing":"üîÆ","Bronwin Aurora":"üåÖ","Reiinapop":"üç≠","hot4lexi":"üî•","aliceoncam":"üé•","Emblack":"üñ§","Miss Fetilicious":"üçØ","Angela White":"ü§ç","soogsx":"üí´",
  "Emily Lynne":"üåø","Jasminx":"üåº","MsFiiire":"üî•","Railey Diesel":"üõ†Ô∏è","Beckyxxoo":"üíã","Evie Rain":"üåßÔ∏è","f_urbee":"üêù","Jameliz":"üíÉ","shinratensei98":"üåÄ","zartprickelnd":"‚ú®",
  "Rae Lil Black":"üï∂Ô∏è","Lana Rhoades":"üíé","Noemiexlili":"üåô","Sophia Smith":"üìö","Kittyxkum":"üê±","Gill Ellis Young":"üéì","Sarawxp":"üåä","Stormy_Succubus":"üå©Ô∏è","Your_submissive_doll":"ü™Ü","Rocksylight":"ü™®",
  "Mackenzie Jones":"üéµ","cherrishlulu":"üçí","Alyssa9":"9Ô∏è‚É£","Nikanikaa":"üåü","Olivia Casta":"üåπ","Lady Melamori":"üéÄ","Waifumiia":"üßã","Eva Elfie":"üßö","Belle Delphine":"üßº","Amanda Cerny":"üé¨",
  "Sophie Mudd":"üßÅ","Sara Underwood":"üå≤","Genesis Mia Lopez":"üìñ","Demi Rose":"üåπ","Alice Delish":"üç∞","Rachel Cook":"üç≥","Hana Bunny":"üê∞","Shiftymine":"‚õèÔ∏è","Izzy Green":"üçÄ","sunnyrayxo":"‚òÄÔ∏è",
  "Vyvan Le":"ü™∑","Potatogodzilla":"ü•î","Natalie Roush":"üöó","Morgpie":"ü•ß","Byoru":"üç°","Jessica Nigri":"üéÆ","Alinity":"üêæ","Miniloonaa":"üåô","cherrycrush":"üçí","Vinnegal":"üß™",
  "Norafawn":"ü¶å","Veronica Perasso":"üíÉ","Haneame":"üéé","Hime_Tsu":"üëë","Iggy Azalea":"üé§","Makoshake":"ü•§","Bebahan":"üêù","Voulezj":"üíÑ","peachjars":"üçë","Okichloeo":"üßú‚Äç‚ôÄÔ∏è"
};
const label = (name) => `${emojiMap[name] || '‚≠ê'}  ${name}`;

// ---- PAGINATION ----
const PAGE_SIZE = 10;

function buildMenu(page = 1) {
  const start = (page - 1) * PAGE_SIZE;
  const slice = celebs.slice(start, start + PAGE_SIZE);

  const rows = slice.map((c) => {
    const cbData = `pick:${c.slug || slugify(c.name)}`;
    return [Markup.button.callback(label(c.name), cbData)];
  });

  const totalPages = Math.max(1, Math.ceil(celebs.length / PAGE_SIZE));
  const nav = [];
  if (page > 1) nav.push(Markup.button.callback('‚¨ÖÔ∏è Prev', `page:${page - 1}`));
  nav.push(Markup.button.callback(`Page ${page}/${totalPages}`, 'noop'));
  if (page < totalPages) nav.push(Markup.button.callback('Next ‚û°Ô∏è', `page:${page + 1}`));
  rows.push(nav);

  return Markup.inlineKeyboard(rows);
}

// ---- COMMANDS / ACTIONS ----
bot.start((ctx) => ctx.reply('Choose a celebrity:', buildMenu(1)));

bot.action(/^page:(\d+)$/, async (ctx) => {
  const page = Number(ctx.match[1]);
  try {
    await ctx.editMessageReplyMarkup(buildMenu(page).reply_markup);
  } catch {
    await ctx.reply('Choose a celebrity:', buildMenu(page));
  }
});

// Show one celeb (photo + buttons). Hide ugly URL preview on fallback.
bot.action(/^pick:(.+)$/, async (ctx) => {
  const slug = ctx.match[1];
  const celeb = celebs.find((c) => c.slug === slug);
  if (!celeb) return ctx.answerCbQuery('Not found');

  const buttons = Markup.inlineKeyboard([
    [Markup.button.url('üîó View Bio', celeb.url)],
    [Markup.button.callback('‚¨ÖÔ∏è Back', `back:1`)]
  ]);

  // Prefer file_id if you add it later; otherwise use image/photo URL
  const photoInput = celeb.file_id || celeb.fileId || celeb.image || celeb.photo;

  if (photoInput) {
    try {
      await ctx.replyWithPhoto(photoInput, {
        caption: `<b>${celeb.name}</b>`,
        parse_mode: 'HTML',
        reply_markup: buttons.reply_markup,
      });
      return;
    } catch (err) {
      console.error('send photo error:', err?.message || err);
    }
  }

  // Fallback text (no preview)
  const text = `<b>${celeb.name}</b>${celeb.url ? `\n<a href="${celeb.url}">Open bio</a>` : ''}`;
  await ctx.reply(text, {
    parse_mode: 'HTML',
    disable_web_page_preview: true,
    reply_markup: buttons.reply_markup,
  });
});

bot.action(/^back:(\d+)$/, (ctx) =>
  ctx.reply('Choose a celebrity:', buildMenu(1))
);

bot.action('noop', (ctx) => ctx.answerCbQuery(''));

bot.launch();
console.log('Bot running‚Ä¶');

// Graceful stop for Railway
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
